//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: Atlus 3ds model archives
//   Authors: Pioziomgames
//   Version: 1.2
//   Purpose: 
//  Category: Archives
// File Mask: *.bam
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "include/common.bt"


typedef struct
{
    SetRandomBackColor();
    char Name[4];
    uint Unk0;
    uint Unk1;
    uint NumberOfValues;
    
    uint Value[NumberOfValues];

    local uint padding = 144 - 32 - (NumberOfValues * 4);
    byte pads[padding];

} MgdData <optimize=false>;

typedef struct
{
    SetRandomBackColor();
    char Name[8];
    uint EndOffsetFromTheStartOfMtnData;
    byte Reserved[4];
    MgdData Mgd;
    

} MtnChunk <optimize=false>;

typedef struct
{
    SetRandomBackColor();
    char Name[8];
    uint Size;
    byte Reserved[4];

    byte Padding[112];


    byte ModelData[Size];
    
    

} MdlChunk <optimize=false>;


typedef struct
{
    SetRandomBackColor();
    char Name[8];
    uint Size;
    byte Reserved[4];
    
    ushort Ids[2];
    uint EplEndOffset;
    byte Reserved2[8];
    uint EplValue;

    //local uint DataSize = Size - 36 - ValueCount[0] * 4;
    byte Data[Size - 36];
    //byte padding[Size - EplEndOffset - 8];

} EplChunk <optimize=false>;



struct
{
    char MAGIC[4];
    if (MAGIC != "ATBC")
    {
        Warning("Not a proper bam file!");
        Exit(1);
    }
    SetRandomBackColor();
    uint FileSize;
    uint EplCount;
    SetRandomBackColor();
    uint HeaderSize;
    uint EplOffset;
    
    SetRandomBackColor();
    uint MdlOffset;
    uint MtnOffset;
    byte padding[4];
    

    int HeaderData[HeaderSize];

    local int readMtn = 1;
    FSeek(MtnOffset);
    while (readMtn == 1)
    {
        if (ReadByte() == 0)
        {
            FSeek(EplOffset);
            readMtn = 0;
        }
        if (FTell() != EplOffset)
        {
            MtnChunk MtnSign;
        }
        else
        {
            readMtn = 0;
        }
    }   

    if (EplCount > 0)
    {
        local int readEpl = 1;
        local int EplCounter = 0;
        while (readEpl == 1)
        {
            if (EplCounter != EplCount)
            {
                EplChunk EplSign;
                EplCounter += 1;
            }
            else
            {
                readEpl = 0;
            }
        }
    }
    FSeek(MdlOffset);
    
    MdlChunk MdlSign;

    FSeek(FileSize());

} File <optimize=false>;